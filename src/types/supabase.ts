// This file is a bridge to the generated Supabase types
// It helps with type imports across the application

import type {
  Database,
  Json
} from '../integrations/supabase/types';

// Re-export basic types
export type {
  Database,
  Json
};

// Define Tables type for use across the application
export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row'];
export type Enums<T extends keyof Database['public']['Enums']> = Database['public']['Enums'][T];

// Define additional utility types that might be needed
export type TablesInsert<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Insert'];
export type TablesUpdate<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Update'];

// === APP-SPECIFIC TYPE SUBSETS ===
// Only include types for tables actually used by this barber shop app
// This reduces bundle size while maintaining full type safety

// Auto-generated by: npm run analyze-tables
// Only includes actual database TABLES (not views or functions)
export type BarberShopTables =
  | 'branches'
  | 'marketing_files'
  | 'ui_elements'
  | 'employees'
  | 'qr_scans'
  | 'qr_scan_counts_daily'
  | 'qr_codes';

// App-specific table types (only what this app uses)
export type BarberShopTable<T extends BarberShopTables> = Tables<T>;
export type BarberShopTableInsert<T extends BarberShopTables> = TablesInsert<T>;
export type BarberShopTableUpdate<T extends BarberShopTables> = TablesUpdate<T>;

// Type guard to ensure only barber shop tables are used
export function isBarberShopTable(table: string): table is BarberShopTables {
  const barberShopTables: BarberShopTables[] = [
    'branches', 'marketing_files', 'ui_elements', 'employees', 'qr_scans',
    'qr_scan_counts_daily', 'qr_codes'
  ];
  return barberShopTables.includes(table as BarberShopTables);
} 